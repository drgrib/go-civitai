// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Hash hash
//
// swagger:model Hash
type Hash struct {

	// auto v1
	// Example: 95F8D0A7
	AutoV1 string `json:"AutoV1,omitempty"`

	// auto v2
	// Example: 95AFA0D9EA
	AutoV2 string `json:"AutoV2,omitempty"`

	// b l a k e3
	// Example: CC4CD6EA2B502C61B4BD86CA5C4B07AF269877877CEC7FB14EEAE846555CED1E
	BLAKE3 string `json:"BLAKE3,omitempty"`

	// c r c32
	// Example: F28B4B59
	CRC32 string `json:"CRC32,omitempty"`

	// s h a256
	// Example: 95AFA0D9EADAC2A04671ED18202FCF09C990148E1CD0AE477BF57F763B948615
	SHA256 string `json:"SHA256,omitempty"`
}

// Validate validates this hash
func (m *Hash) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this hash based on context it is used
func (m *Hash) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Hash) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Hash) UnmarshalBinary(b []byte) error {
	var res Hash
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
